# Docker Compose for AFAS Local Monitoring Stack
# Provides Prometheus, Grafana, and exporters for local development

version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: afas-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./rules:/etc/prometheus/rules
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    restart: unless-stopped
    networks:
      - afas-monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: afas-grafana
    ports:
      - "3001:3000"  # Use 3001 to avoid conflict with frontend
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=afas_admin_2024
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/afas_overview.json
    restart: unless-stopped
    networks:
      - afas-monitoring
    depends_on:
      - prometheus

  # Database exporters
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: afas-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://afas_user:afas_password@localhost:5432/afas_db?sslmode=disable
    restart: unless-stopped
    networks:
      - afas-monitoring

  mongodb-exporter:
    image: percona/mongodb_exporter:latest
    container_name: afas-mongodb-exporter
    ports:
      - "9216:9216"
    command:
      - '--mongodb.uri=mongodb://localhost:27017'
      - '--collect-all'
    restart: unless-stopped
    networks:
      - afas-monitoring

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: afas-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://localhost:6379
    restart: unless-stopped
    networks:
      - afas-monitoring

  # System monitoring
  node-exporter:
    image: prom/node-exporter:latest
    container_name: afas-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - afas-monitoring

  # Alert manager for notifications
  alertmanager:
    image: prom/alertmanager:latest
    container_name: afas-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: unless-stopped
    networks:
      - afas-monitoring

  # Log aggregation (lightweight alternative to ELK)
  loki:
    image: grafana/loki:latest
    container_name: afas-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - afas-monitoring

  promtail:
    image: grafana/promtail:latest
    container_name: afas-promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - ../logs:/var/log/afas:ro
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - afas-monitoring
    depends_on:
      - loki

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data:

networks:
  afas-monitoring:
    driver: bridge