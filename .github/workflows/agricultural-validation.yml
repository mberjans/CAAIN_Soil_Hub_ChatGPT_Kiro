name: Agricultural Validation Pipeline

on:
  pull_request:
    paths:
      - 'services/recommendation-engine/**'
      - 'services/agricultural/**'
      - 'tests/agricultural/**'
      - 'services/question-router/**'
      - 'services/ai-agent/**'

env:
  PYTHON_VERSION: '3.11'

jobs:
  agricultural-accuracy-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-agricultural-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-agricultural-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/recommendation-engine/requirements.txt
          pip install -r services/recommendation-engine/requirements-test.txt
          pip install pytest pytest-cov pytest-asyncio
          # Agricultural-specific testing libraries
          pip install numpy scipy pandas scikit-learn
          
      - name: Run Agricultural Logic Tests
        run: |
          pytest tests/agricultural/ -v --cov=agricultural --cov-report=xml --tb=short -m "agricultural"
          
      - name: Validate Against Extension Guidelines
        run: |
          python scripts/validate_against_extension_data.py
          
      - name: Check Agricultural References
        run: |
          python scripts/check_agricultural_sources.py
          
      - name: Validate Nutrient Calculations
        run: |
          pytest tests/agricultural/test_nutrient_calculations.py -v --tb=short
          
      - name: Test Crop Suitability Algorithms
        run: |
          pytest tests/agricultural/test_crop_suitability.py -v --tb=short
          
      - name: Validate Soil Health Assessments
        run: |
          pytest tests/agricultural/test_soil_health.py -v --tb=short
          
      - name: Check Regional Adaptations
        run: |
          pytest tests/agricultural/test_regional_variations.py -v --tb=short
          
      - name: Upload agricultural test results
        uses: actions/upload-artifact@v3
        with:
          name: agricultural-test-results
          path: |
            coverage.xml
            agricultural-validation-report.json
            
      - name: Expert Review Required
        if: contains(github.event.pull_request.changed_files, 'agricultural/') || contains(github.event.pull_request.changed_files, 'recommendation')
        run: |
          echo "Agricultural logic changes detected. Expert review required."
          echo "::warning title=Expert Review Required::Agricultural logic changes require validation by certified agricultural professionals before merge"
          # Add label for expert review (requires GitHub token with appropriate permissions)
          # gh pr edit ${{ github.event.number }} --add-label "needs-agricultural-expert-review"

  validate-agricultural-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pydantic pytest
          
      - name: Validate soil test data ranges
        run: |
          python scripts/validate_soil_data_ranges.py
          
      - name: Check nutrient calculation accuracy
        run: |
          python scripts/validate_nutrient_calculations.py
          
      - name: Verify agricultural units consistency
        run: |
          python scripts/check_agricultural_units.py
          
      - name: Test recommendation confidence thresholds
        run: |
          python scripts/validate_confidence_thresholds.py

  test-with-real-farm-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/recommendation-engine/requirements.txt
          pip install pytest pytest-asyncio
          
      - name: Test with Iowa farm scenarios
        run: |
          pytest tests/agricultural/test_iowa_scenarios.py -v --tb=short
          
      - name: Test with California farm scenarios
        run: |
          pytest tests/agricultural/test_california_scenarios.py -v --tb=short
          
      - name: Test with challenging soil conditions
        run: |
          pytest tests/agricultural/test_problem_soils.py -v --tb=short
          
      - name: Validate economic optimization
        run: |
          pytest tests/agricultural/test_economic_optimization.py -v --tb=short

  agricultural-safety-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/recommendation-engine/requirements.txt
          
      - name: Check for dangerous recommendations
        run: |
          python scripts/check_dangerous_recommendations.py
          
      - name: Validate fertilizer rate limits
        run: |
          python scripts/validate_fertilizer_limits.py
          
      - name: Check environmental safety
        run: |
          python scripts/check_environmental_safety.py
          
      - name: Verify conservative approach
        run: |
          python scripts/verify_conservative_recommendations.py

  generate-agricultural-report:
    runs-on: ubuntu-latest
    needs: [agricultural-accuracy-tests, validate-agricultural-data, test-with-real-farm-data, agricultural-safety-checks]
    if: always()
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Generate agricultural validation report
        run: |
          python scripts/generate_agricultural_report.py
          
      - name: Upload agricultural validation report
        uses: actions/upload-artifact@v3
        with:
          name: agricultural-validation-report
          path: |
            agricultural-validation-report.html
            agricultural-metrics.json
            
      - name: Comment on PR with results
        if: github.event_name == 'pull_request'
        run: |
          echo "Agricultural validation completed. Check artifacts for detailed results."
          echo "::notice title=Agricultural Validation::All agricultural logic has been validated against extension guidelines and safety standards"