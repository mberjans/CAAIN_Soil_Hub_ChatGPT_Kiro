[pytest]
# Pytest configuration for fertilizer application testing suite
# TICKET-023_fertilizer-application-method-11.1

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    comprehensive: Comprehensive end-to-end tests
    agricultural_validation: Agricultural domain validation tests
    performance: Performance and load tests
    load_test: Load testing scenarios
    stress_test: Stress testing scenarios
    expert_review: Tests requiring agricultural expert review
    integration: Integration tests for service interactions
    unit: Unit tests for individual components
    slow: Slow running tests
    fast: Fast running tests

# Test execution options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --junitxml=test-results.xml
    --html=test-report.html
    --self-contained-html

# Async test support
asyncio_mode = auto

# Test timeout
timeout = 300

# Minimum version
minversion = 6.0

# Test collection
collect_ignore = 
    venv
    env
    .venv
    .env
    __pycache__
    *.pyc
    .pytest_cache
    test_data

# Logging
log_cli = true
log_cli_level = WARNING
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests
    ignore::UserWarning:urllib3

# Test paths
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    venv
    env
    .venv
    .env

# Coverage options
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */migrations/*
    */alembic/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml